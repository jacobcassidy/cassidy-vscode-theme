{
  "scopeName": "missing-css-syntax.injection",
  "injectionSelector": "L:source.css",
  "patterns": [
    {
      "include": "#missing-pseudo-classes"
    },
    {
      "include": "#missing-property-keywords"
    }
  ],
  "repository": {
    "missing-pseudo-classes": {
      "begin": "(?i)((:)(?:not|has|matches|where|is))(\\()",
      "beginCaptures": {
        "1": {
          "name": "entity.other.attribute-name.pseudo-class.css"
        },
        "2": {
          "name": "punctuation.definition.entity.css"
        },
        "3": {
          "name": "punctuation.section.function.begin.bracket.round.css"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.function.end.bracket.round.css"
        }
      },
      "patterns": [
        {
          "include": "#attribute-names"
        },
        {
          "include": "#punctuation"
        },
        {
          "include": "#tag-names"
        }
      ]
    },
    "missing-property-keywords": {
      "match": "auto-fit",
      "name": "support.constant.property-value.css"
    },
    "attribute-names": {
      "patterns": [
        {
          "match": "(?x)\n(?<=\\.) # Valid class-name\n(\n (?: [-a-zA-Z_0-9]|[^\\x00-\\x7F] # Valid identifier characters\n | \\\\(?:[0-9a-fA-F]{1,6}|.) # Escape sequence\n  )+\n) # Followed by either:\n(?= $ # - End of the line\n | [\\s,.\\#)\\[:{>+~|] # - Another selector\n | /\\* # - A block comment\n)",
          "name": "entity.other.attribute-name.class.css"
        },
        {
          "match": "(?x)\n(\\#)\n(\n -?\n (?![0-9])\n (?:[-a-zA-Z0-9_]|[^\\x00-\\x7F]|\\\\(?:[0-9a-fA-F]{1,6}|.))+\n)\n(?=$|[\\s,.\\#)\\[:{>+~|]|/\\*)",
          "name": "entity.other.attribute-name.id.css"
        },
        {
          "match": "(?xi)\n(:)(:*)\n(?: active|any-link|checked|default|disabled|empty|enabled|first\n| (?:first|last|only)-(?:child|of-type)|focus|focus-visible|focus-within|fullscreen|host|hover\n|in-range|indeterminate|invalid|left|link|optional|out-of-range\n|read-only|read-write|required|right|root|scope|target|unresolved\n |valid|visited\n)(?![\\w-]|\\s*[;}])",
          "name": "entity.other.attribute-name.pseudo-class.css"
        },
        {
          "match": "(?xi)\n(?:\n (::?) # Elements using both : and :: notation\n (?: after\n|before\n|first-letter\n|first-line\n| (?:-(?:ah|apple|atsc|epub|hp|khtml|moz\n |ms|o|rim|ro|tc|wap|webkit|xv)\n |(?:mso|prince))\n -[a-z-]+\n )\n|\n (::) # Double-colon only\n (?: backdrop\n|content\n|grammar-error\n|marker\n|placeholder\n|selection\n|shadow\n|spelling-error\n)\n)\n(?![\\w-]|\\s*[;}])",
          "name": "entity.other.attribute-name.pseudo-element.css"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "match": ",",
          "name": "punctuation.separator.list.comma.css"
        },
        {
          "match": "\\.",
          "name": "punctuation.definition.entity.css"
        }
      ]
    },
    "tag-names": {
      "patterns": [
        {
          "match": "(?xi) (?<![\\w:-])\n(?:\n   # HTML\n   a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdi|bdo|bgsound|big|blink|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command|content|data|datalist|dd|del|details|dfn|dialog|dir|div|dl|dt|element|em|embed|fieldset|figcaption|figure|font|footer|form|frame|frameset|h[1-6]|head|header|hgroup|hr|html|i|iframe|image|img|input|ins|isindex|kbd|keygen|label|legend|li|link|listing|main|map|mark|marquee|math|menu|menuitem|meta|meter|multicol|nav|nextid|nobr|noembed|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|plaintext|pre|progress|q|rb|rp|rt|rtc|ruby|s|samp|script|section|select|shadow|slot|small|source|spacer|span|strike|strong|style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr| track|tt|u|ul|var|video|wbr|xmp\n   # SVG\n   |altGlyph|altGlyphDef|altGlyphItem|animate|animateColor|animateMotion|animateTransform|circle|clipPath|color-profile|cursor|defs|desc|discard|ellipse|feBlend|feColorMatrix|feComponentTransfer|feComposite|feConvolveMatrix|feDiffuseLighting|feDisplacementMap|feDistantLight|feDropShadow|feFlood|feFuncA|feFuncB|feFuncG|feFuncR|feGaussianBlur|feImage|feMerge|feMergeNode|feMorphology|feOffset|fePointLight|feSpecularLighting|feSpotLight|feTile|feTurbulence|filter|font-face|font-face-format|font-face-name|font-face-src|font-face-uri|foreignObject|g|glyph|glyphRef|hatch|hatchpath|hkern|line|linearGradient|marker|mask|mesh|meshgradient|meshpatch|meshrow|metadata|missing-glyph|mpath|path|pattern|polygon|polyline|radialGradient|rect|set|solidcolor|stop|svg|switch|symbol|text|textPath|tref|tspan|use|view|vkern\n   # MathML\n   |annotation|annotation-xml|maction|maligngroup|malignmark|math|menclose|merror|mfenced|mfrac|mglyph|mi|mlabeledtr|mlongdiv|mmultiscripts|mn|mo|mover|mpadded|mphantom|mroot|mrow|ms|mscarries|mscarry|msgroup|msline|mspace|msqrt|msrow|mstack|mstyle|msub|msubsup|msup|mtable|mtd|mtext|mtr|munder|munderover|semantics)(?=[+~>\\s,.\\#|){:\\[]|/\\*|$)",
          "name": "entity.name.tag.css"
        },
        {
          "match": "(?x) (?<![@\\w-])\n(?= # Custom element names must:\n [a-z] # - start with a lowercase ASCII letter,\n  \\w* - # - contain at least one dash\n)\n(?:\n  (?![A-Z]) # No uppercase ASCII letters are allowed\n  [\\w-] # Allow any other word character or dash\n)+\n(?![(\\w-])",
          "name": "entity.name.tag.custom.css"
        }
      ]
    }
  }
}
